(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[405],{8581:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/",function(){return t(6845)}])},6845:function(e,n,t){"use strict";t.r(n),t.d(n,{default:function(){return g}});var i=t(5893),r=t(9008),o=t(5675),a=t(5666),s=t.n(a);function l(e,n,t,i,r,o,a){try{var s=e[o](a),l=s.value}catch(c){return void t(c)}s.done?n(l):Promise.resolve(l).then(i,r)}function c(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function u(e,n){for(var t=0;t<n.length;t++){var i=n[t];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}function d(e,n,t){return n&&u(e.prototype,n),t&&u(e,t),e}function v(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=[],i=!0,r=!1,o=void 0;try{for(var a,s=e[Symbol.iterator]();!(i=(a=s.next()).done)&&(t.push(a.value),!n||t.length!==n);i=!0);}catch(l){r=!0,o=l}finally{try{i||null==s.return||s.return()}finally{if(r)throw o}}return t}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}function h(e){return function(e){if(Array.isArray(e)){for(var n=0,t=new Array(e.length);n<e.length;n++)t[n]=e[n];return t}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}var b=function(e){return[(e>>16&255)/255,(e>>8&255)/255,(255&e)/255]},m=function(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e};["SCREEN","LINEAR_LIGHT"].reduce((function(e,n,t){return Object.assign(e,(o=t,(r=n)in(i={})?Object.defineProperty(i,r,{value:o,enumerable:!0,configurable:!0,writable:!0}):i[r]=o,i));var i,r,o}),{});var f=function(){function e(n,t,i,r){var o=void 0!==r&&r;c(this,e);var a=this,s=-1!==document.location.search.toLowerCase().indexOf("debug=webgl");a.canvas=n,a.gl=a.canvas.getContext("webgl",{antialias:!0}),a.meshes=[];var l=a.gl;t&&i&&this.setSize(t,i),a.lastDebugMsg,a.debug=o&&s?function(e){var n,t=new Date;t-a.lastDebugMsg>1e3&&console.log("---"),(n=console).log.apply(n,[t.toLocaleTimeString()+Array(Math.max(0,32-e.length)).join(" ")+e+": "].concat(h(Array.from(arguments).slice(1)))),a.lastDebugMsg=t}:function(){},Object.defineProperties(a,{Material:{enumerable:!1,value:function(){function e(n,t,i){var r=void 0===i?{}:i;c(this,e);var o=function(e,n){var t=l.createShader(e);return l.shaderSource(t,n),l.compileShader(t),l.getShaderParameter(t,l.COMPILE_STATUS)||console.error(l.getShaderInfoLog(t)),a.debug("Material.compileShaderSource",{source:n}),t},s=function(e,n){return Object.entries(e).map((function(e){var t=v(e,2),i=t[0];return t[1].getDeclaration(i,n)})).join("\n")},u=this;u.uniforms=r,u.uniformInstances=[];var d="\n              precision highp float;\n            ";u.vertexSource="\n              ".concat(d,"\n              attribute vec4 position;\n              attribute vec2 uv;\n              attribute vec2 uvNorm;\n              ").concat(s(a.commonUniforms,"vertex"),"\n              ").concat(s(r,"vertex"),"\n              ").concat(n,"\n            "),u.Source="\n              ".concat(d,"\n              ").concat(s(a.commonUniforms,"fragment"),"\n              ").concat(s(r,"fragment"),"\n              ").concat(t,"\n            "),u.vertexShader=o(l.VERTEX_SHADER,u.vertexSource),u.fragmentShader=o(l.FRAGMENT_SHADER,u.Source),u.program=l.createProgram(),l.attachShader(u.program,u.vertexShader),l.attachShader(u.program,u.fragmentShader),l.linkProgram(u.program),l.getProgramParameter(u.program,l.LINK_STATUS)||console.error(l.getProgramInfoLog(u.program)),l.useProgram(u.program),u.attachUniforms(void 0,a.commonUniforms),u.attachUniforms(void 0,u.uniforms)}return d(e,[{key:"attachUniforms",value:function(e,n){var t=this;void 0===e?Object.entries(n).forEach((function(e){var n=v(e,2),i=n[0],r=n[1];t.attachUniforms(i,r)})):"array"==n.type?n.value.forEach((function(n,i){return t.attachUniforms("".concat(e,"[").concat(i,"]"),n)})):"struct"==n.type?Object.entries(n.value).forEach((function(n){var i=v(n,2),r=i[0],o=i[1];return t.attachUniforms("".concat(e,".").concat(r),o)})):(a.debug("Material.attachUniforms",{name:e,uniform:n}),t.uniformInstances.push({uniform:n,location:l.getUniformLocation(t.program,e)}))}}]),e}()},Uniform:{enumerable:!1,value:function(){function e(n){c(this,e),this.type="float",Object.assign(this,n),this.typeFn={float:"1f",int:"1i",vec2:"2fv",vec3:"3fv",vec4:"4fv",mat4:"Matrix4fv"}[this.type]||"1f",this.update()}return d(e,[{key:"update",value:function(e){void 0!==this.value&&l["uniform".concat(this.typeFn)](e,0===this.typeFn.indexOf("Matrix")?this.transpose:this.value,0===this.typeFn.indexOf("Matrix")?this.value:null)}},{key:"getDeclaration",value:function(e,n,t){var i=this;if(i.excludeFrom!==n){if("array"===i.type)return i.value[0].getDeclaration(e,n,i.value.length)+"\nconst int ".concat(e,"_length = ").concat(i.value.length,";");if("struct"===i.type){var r=e.replace("u_","");return r=r.charAt(0).toUpperCase()+r.slice(1),"uniform struct ".concat(r," \n                                  {\n")+Object.entries(i.value).map((function(e){var t=v(e,2),i=t[0];return t[1].getDeclaration(i,n).replace(/^uniform/,"")})).join("")+"\n} ".concat(e).concat(t>0?"[".concat(t,"]"):"",";")}return"uniform ".concat(i.type," ").concat(e).concat(t>0?"[".concat(t,"]"):"",";")}}}]),e}()},PlaneGeometry:{enumerable:!1,value:function(){function e(n,t,i,r,o){c(this,e),l.createBuffer(),this.attributes={position:new a.Attribute({target:l.ARRAY_BUFFER,size:3}),uv:new a.Attribute({target:l.ARRAY_BUFFER,size:2}),uvNorm:new a.Attribute({target:l.ARRAY_BUFFER,size:2}),index:new a.Attribute({target:l.ELEMENT_ARRAY_BUFFER,size:3,type:l.UNSIGNED_SHORT})},this.setTopology(i,r),this.setSize(n,t,o)}return d(e,[{key:"setTopology",value:function(e,n){var t=void 0===e?1:e,i=void 0===n?1:n,r=this;r.xSegCount=t,r.ySegCount=i,r.vertexCount=(r.xSegCount+1)*(r.ySegCount+1),r.quadCount=r.xSegCount*r.ySegCount*2,r.attributes.uv.values=new Float32Array(2*r.vertexCount),r.attributes.uvNorm.values=new Float32Array(2*r.vertexCount),r.attributes.index.values=new Uint16Array(3*r.quadCount);for(var o=0;o<=r.ySegCount;o++)for(var s=0;s<=r.xSegCount;s++){var l=o*(r.xSegCount+1)+s;if(r.attributes.uv.values[2*l]=s/r.xSegCount,r.attributes.uv.values[2*l+1]=1-o/r.ySegCount,r.attributes.uvNorm.values[2*l]=s/r.xSegCount*2-1,r.attributes.uvNorm.values[2*l+1]=1-o/r.ySegCount*2,s<r.xSegCount&&o<r.ySegCount){var c=o*r.xSegCount+s;r.attributes.index.values[6*c]=l,r.attributes.index.values[6*c+1]=l+1+r.xSegCount,r.attributes.index.values[6*c+2]=l+1,r.attributes.index.values[6*c+3]=l+1,r.attributes.index.values[6*c+4]=l+1+r.xSegCount,r.attributes.index.values[6*c+5]=l+2+r.xSegCount}}r.attributes.uv.update(),r.attributes.uvNorm.update(),r.attributes.index.update(),a.debug("Geometry.setTopology",{uv:r.attributes.uv,uvNorm:r.attributes.uvNorm,index:r.attributes.index})}},{key:"setSize",value:function(e,n,t){var i=void 0===e?1:e,r=void 0===n?1:n,o=void 0===t?"xz":t,s=this;s.width=i,s.height=r,s.orientation=o,s.attributes.position.values&&s.attributes.position.values.length===3*s.vertexCount||(s.attributes.position.values=new Float32Array(3*s.vertexCount));for(var l=i/-2,c=r/-2,u=i/s.xSegCount,d=r/s.ySegCount,v=0;v<=s.ySegCount;v++)for(var h=c+v*d,b=0;b<=s.xSegCount;b++){var m=l+b*u,f=v*(s.xSegCount+1)+b;s.attributes.position.values[3*f+"xyz".indexOf(o[0])]=m,s.attributes.position.values[3*f+"xyz".indexOf(o[1])]=-h}s.attributes.position.update(),a.debug("Geometry.setSize",{position:s.attributes.position})}}]),e}()},Mesh:{enumerable:!1,value:function(){function e(n,t){c(this,e);var i=this;i.geometry=n,i.material=t,i.wireframe=!1,i.attributeInstances=[],Object.entries(i.geometry.attributes).forEach((function(e){var n=v(e,2),t=n[0],r=n[1];i.attributeInstances.push({attribute:r,location:r.attach(t,i.material.program)})})),a.meshes.push(i),a.debug("Mesh.constructor",{mesh:i})}return d(e,[{key:"draw",value:function(){l.useProgram(this.material.program),this.material.uniformInstances.forEach((function(e){var n=e.uniform,t=e.location;return n.update(t)})),this.attributeInstances.forEach((function(e){var n=e.attribute,t=e.location;return n.use(t)})),l.drawElements(this.wireframe?l.LINES:l.TRIANGLES,this.geometry.attributes.index.values.length,l.UNSIGNED_SHORT,0)}},{key:"remove",value:function(){var e=this;a.meshes=a.meshes.filter((function(n){return n!=e}))}}]),e}()},Attribute:{enumerable:!1,value:function(){function e(n){c(this,e),this.type=l.FLOAT,this.normalized=!1,this.buffer=l.createBuffer(),Object.assign(this,n),this.update()}return d(e,[{key:"update",value:function(){void 0!==this.values&&(l.bindBuffer(this.target,this.buffer),l.bufferData(this.target,this.values,l.STATIC_DRAW))}},{key:"attach",value:function(e,n){var t=l.getAttribLocation(n,e);return this.target===l.ARRAY_BUFFER&&(l.enableVertexAttribArray(t),l.vertexAttribPointer(t,this.size,this.type,this.normalized,0,0)),t}},{key:"use",value:function(e){l.bindBuffer(this.target,this.buffer),this.target===l.ARRAY_BUFFER&&(l.enableVertexAttribArray(e),l.vertexAttribPointer(e,this.size,this.type,this.normalized,0,0))}}]),e}()}});var u=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1];a.commonUniforms={projectionMatrix:new a.Uniform({type:"mat4",value:u}),modelViewMatrix:new a.Uniform({type:"mat4",value:u}),resolution:new a.Uniform({type:"vec2",value:[1,1]}),aspectRatio:new a.Uniform({type:"float",value:1})}}return d(e,[{key:"setSize",value:function(e,n){var t=void 0===e?640:e,i=void 0===n?480:n;this.width=t,this.height=i,this.canvas.width=t,this.canvas.height=i,this.gl.viewport(0,0,t,i),this.commonUniforms.resolution.value=[t,i],this.commonUniforms.aspectRatio.value=t/i,this.debug("MiniGL.setSize",{width:t,height:i})}},{key:"setOrthographicCamera",value:function(e,n,t,i,r){var o=void 0===e?0:e,a=void 0===n?0:n,s=void 0===t?0:t,l=void 0===i?-2e3:i,c=void 0===r?2e3:r;this.commonUniforms.projectionMatrix.value=[2/this.width,0,0,0,0,2/this.height,0,0,0,0,2/(l-c),0,o,a,s,1],this.debug("setOrthographicCamera",this.commonUniforms.projectionMatrix.value)}},{key:"render",value:function(){this.gl.clearColor(0,0,0,0),this.gl.clearDepth(1),this.meshes.forEach((function(e){return e.draw()}))}}]),e}();function g(){return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(r.default,{children:[(0,i.jsx)("title",{children:"CHARITY WATER REDESIGN"}),(0,i.jsx)("meta",{name:"description",content:"Generated by create next app"}),(0,i.jsx)("link",{rel:"icon",href:"/favicon.ico"}),(0,i.jsx)("link",{rel:"stylesheet",href:"https://use.typekit.net/fpc1kex.css"}),(0,i.jsx)("script",{type:"text/javascript",scr:"../scripts/gradient.js"})]}),(0,i.jsx)("main",{children:(0,i.jsxs)("section",{children:[(0,i.jsx)("div",{className:"fixed -z-10",children:(0,i.jsx)("canvas",{id:"gradient-canvas"})}),(0,i.jsxs)("div",{className:"text-center py-24 px-5 lg:px-0",children:[(0,i.jsx)("div",{className:"mb-6",children:(0,i.jsx)(o.default,{src:"/logo.png",alt:"logo",width:46,height:64})}),(0,i.jsx)("p",{className:"text-subtitleCap uppercase font-bold mb-3",children:"Imagine spending hours every day searching for water"}),(0,i.jsxs)("h1",{className:"text-titleMob lg:text-titleh1 font-semibold mb-6",children:["With clean water,",(0,i.jsx)("br",{}),"everything changes."]}),(0,i.jsxs)("div",{className:"max-w-sm mx-auto mb-8",children:[(0,i.jsxs)("p",{className:"mb-6",children:["Since 2006, thanks to our local partners and over millions of supporters, we\u2019ve brought clean and safe water to more than 13 million people around ",(0,i.jsx)("span",{className:"whitespace-nowrap",children:"the world."})]}),(0,i.jsx)("p",{className:"font-light italic",children:"100% of your donation will always fund clean water."})]}),(0,i.jsx)("button",{className:"bg-yellow rounded-[1.25rem]",children:(0,i.jsx)("a",{href:"https://www.charitywater.org/donate",target:"_blank",children:(0,i.jsx)("span",{className:"uppercase text-ctaMob lg:text-cta font-bold py-6 px-10 inline-block",children:"DONATE NOW"})})})]})]})})]})}(new(function(){function e(){for(var n=arguments.length,t=new Array(n),i=0;i<n;i++)t[i]=arguments[i];var r=this;c(this,e),m(this,"el",void 0),m(this,"cssVarRetries",0),m(this,"maxCssVarRetries",200),m(this,"angle",0),m(this,"isLoadedClass",!1),m(this,"isScrolling",!1),m(this,"scrollingTimeout",void 0),m(this,"scrollingRefreshDelay",200),m(this,"isIntersecting",!1),m(this,"shaderFiles",void 0),m(this,"vertexShader",void 0),m(this,"sectionColors",void 0),m(this,"computedCanvasStyle",void 0),m(this,"conf",void 0),m(this,"uniforms",void 0),m(this,"t",1253106),m(this,"last",0),m(this,"width",void 0),m(this,"minWidth",1111),m(this,"height",600),m(this,"xSegCount",void 0),m(this,"ySegCount",void 0),m(this,"mesh",void 0),m(this,"material",void 0),m(this,"geometry",void 0),m(this,"minigl",void 0),m(this,"scrollObserver",void 0),m(this,"amp",320),m(this,"seed",5),m(this,"freqX",14e-5),m(this,"freqY",29e-5),m(this,"freqDelta",1e-5),m(this,"activeColors",[1,1,1,1]),m(this,"isMetaKey",!1),m(this,"isGradientLegendVisible",!1),m(this,"isMouseDown",!1),m(this,"handleScroll",(function(){clearTimeout(r.scrollingTimeout),r.scrollingTimeout=setTimeout(r.handleScrollEnd,r.scrollingRefreshDelay),r.isGradientLegendVisible&&r.hideGradientLegend(),r.conf.playing&&(r.isScrolling=!0,r.pause())})),m(this,"handleScrollEnd",(function(){r.isScrolling=!1,r.isIntersecting&&r.play()})),m(this,"resize",(function(){r.width=window.innerWidth,r.minigl.setSize(r.width,r.height),r.minigl.setOrthographicCamera(),r.xSegCount=Math.ceil(r.width*r.conf.density[0]),r.ySegCount=Math.ceil(r.height*r.conf.density[1]),r.mesh.geometry.setTopology(r.xSegCount,r.ySegCount),r.mesh.geometry.setSize(r.width,r.height),r.mesh.material.uniforms.u_shadow_power.value=r.width<600?5:6})),m(this,"handleMouseDown",(function(e){r.isGradientLegendVisible&&(r.isMetaKey=e.metaKey,r.isMouseDown=!0,!1===r.conf.playing&&requestAnimationFrame(r.animate))})),m(this,"handleMouseUp",(function(){r.isMouseDown=!1})),m(this,"animate",(function(e){if(!r.shouldSkipFrame(e)||r.isMouseDown){if(r.t+=Math.min(e-r.last,1e3/15),r.last=e,r.isMouseDown){var n=160;r.isMetaKey&&(n=-160),r.t+=n}r.mesh.material.uniforms.u_time.value=r.t,r.minigl.render()}if(0!==r.last&&r.isStatic)return r.minigl.render(),void r.disconnect();(r.conf.playing||r.isMouseDown)&&requestAnimationFrame(r.animate)})),m(this,"addIsLoadedClass",(function(){var e=r;!r.isLoadedClass&&(r.isLoadedClass=!0,r.el.classList.add("isLoaded"),setTimeout((function(){e.el.parentElement.classList.add("isLoaded")}),3e3))})),m(this,"pause",(function(){r.conf.playing=!1})),m(this,"play",(function(){requestAnimationFrame(r.animate),r.conf.playing=!0})),m(this,"initGradient",(function(e){return r.el=document.querySelector(e),r.connect(),r}))}return d(e,[{key:"connect",value:function(){var e,n=this;return(e=s().mark((function e(){return s().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:this.shaderFiles={vertex:"varying vec3 v_color;\n\nvoid main() {\n  float time = u_time * u_global.noiseSpeed;\n\n  vec2 noiseCoord = resolution * uvNorm * u_global.noiseFreq;\n\n  vec2 st = 1. - uvNorm.xy;\n\n  //\n  // Tilting the plane\n  //\n\n  // Front-to-back tilt\n  float tilt = resolution.y / 2.0 * uvNorm.y;\n\n  // Left-to-right angle\n  float incline = resolution.x * uvNorm.x / 2.0 * u_vertDeform.incline;\n\n  // Up-down shift to offset incline\n  float offset = resolution.x / 2.0 * u_vertDeform.incline * mix(u_vertDeform.offsetBottom, u_vertDeform.offsetTop, uv.y);\n\n  //\n  // Vertex noise\n  //\n\n  float noise = snoise(vec3(\n    noiseCoord.x * u_vertDeform.noiseFreq.x + time * u_vertDeform.noiseFlow,\n    noiseCoord.y * u_vertDeform.noiseFreq.y,\n    time * u_vertDeform.noiseSpeed + u_vertDeform.noiseSeed\n  )) * u_vertDeform.noiseAmp;\n\n  // Fade noise to zero at edges\n  noise *= 1.0 - pow(abs(uvNorm.y), 2.0);\n\n  // Clamp to 0\n  noise = max(0.0, noise);\n\n  vec3 pos = vec3(\n    position.x,\n    position.y + tilt + incline + noise - offset,\n    position.z\n  );\n\n  //\n  // Vertex color, to be passed to fragment shader\n  //\n\n  if (u_active_colors[0] == 1.) {\n    v_color = u_baseColor;\n  }\n\n  for (int i = 0; i < u_waveLayers_length; i++) {\n    if (u_active_colors[i + 1] == 1.) {\n      WaveLayers layer = u_waveLayers[i];\n\n      float noise = smoothstep(\n        layer.noiseFloor,\n        layer.noiseCeil,\n        snoise(vec3(\n          noiseCoord.x * layer.noiseFreq.x + time * layer.noiseFlow,\n          noiseCoord.y * layer.noiseFreq.y,\n          time * layer.noiseSpeed + layer.noiseSeed\n        )) / 2.0 + 0.5\n      );\n\n      v_color = blendNormal(v_color, layer.color, pow(noise, 4.));\n    }\n  }\n\n  //\n  // Finish\n  //\n\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(pos, 1.0);\n}",noise:"//\n// Description : Array and textureless GLSL 2D/3D/4D simplex\n//               noise functions.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : stegu\n//     Lastmod : 20110822 (ijm)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//               https://github.com/ashima/webgl-noise\n//               https://github.com/stegu/webgl-noise\n//\n\nvec3 mod289(vec3 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 mod289(vec4 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 permute(vec4 x) {\n    return mod289(((x*34.0)+1.0)*x);\n}\n\nvec4 taylorInvSqrt(vec4 r)\n{\n  return 1.79284291400159 - 0.85373472095314 * r;\n}\n\nfloat snoise(vec3 v)\n{\n  const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;\n  const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);\n\n// First corner\n  vec3 i  = floor(v + dot(v, C.yyy) );\n  vec3 x0 =   v - i + dot(i, C.xxx) ;\n\n// Other corners\n  vec3 g = step(x0.yzx, x0.xyz);\n  vec3 l = 1.0 - g;\n  vec3 i1 = min( g.xyz, l.zxy );\n  vec3 i2 = max( g.xyz, l.zxy );\n\n  //   x0 = x0 - 0.0 + 0.0 * C.xxx;\n  //   x1 = x0 - i1  + 1.0 * C.xxx;\n  //   x2 = x0 - i2  + 2.0 * C.xxx;\n  //   x3 = x0 - 1.0 + 3.0 * C.xxx;\n  vec3 x1 = x0 - i1 + C.xxx;\n  vec3 x2 = x0 - i2 + C.yyy; // 2.0*C.x = 1/3 = C.y\n  vec3 x3 = x0 - D.yyy;      // -1.0+3.0*C.x = -0.5 = -D.y\n\n// Permutations\n  i = mod289(i);\n  vec4 p = permute( permute( permute(\n            i.z + vec4(0.0, i1.z, i2.z, 1.0 ))\n          + i.y + vec4(0.0, i1.y, i2.y, 1.0 ))\n          + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));\n\n// Gradients: 7x7 points over a square, mapped onto an octahedron.\n// The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294)\n  float n_ = 0.142857142857; // 1.0/7.0\n  vec3  ns = n_ * D.wyz - D.xzx;\n\n  vec4 j = p - 49.0 * floor(p * ns.z * ns.z);  //  mod(p,7*7)\n\n  vec4 x_ = floor(j * ns.z);\n  vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)\n\n  vec4 x = x_ *ns.x + ns.yyyy;\n  vec4 y = y_ *ns.x + ns.yyyy;\n  vec4 h = 1.0 - abs(x) - abs(y);\n\n  vec4 b0 = vec4( x.xy, y.xy );\n  vec4 b1 = vec4( x.zw, y.zw );\n\n  //vec4 s0 = vec4(lessThan(b0,0.0))*2.0 - 1.0;\n  //vec4 s1 = vec4(lessThan(b1,0.0))*2.0 - 1.0;\n  vec4 s0 = floor(b0)*2.0 + 1.0;\n  vec4 s1 = floor(b1)*2.0 + 1.0;\n  vec4 sh = -step(h, vec4(0.0));\n\n  vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;\n  vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;\n\n  vec3 p0 = vec3(a0.xy,h.x);\n  vec3 p1 = vec3(a0.zw,h.y);\n  vec3 p2 = vec3(a1.xy,h.z);\n  vec3 p3 = vec3(a1.zw,h.w);\n\n//Normalise gradients\n  vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\n  p0 *= norm.x;\n  p1 *= norm.y;\n  p2 *= norm.z;\n  p3 *= norm.w;\n\n// Mix final noise value\n  vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);\n  m = m * m;\n  return 42.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1),\n                                dot(p2,x2), dot(p3,x3) ) );\n}",blend:"//\n// https://github.com/jamieowen/glsl-blend\n//\n\n// Normal\n\nvec3 blendNormal(vec3 base, vec3 blend) {\n\treturn blend;\n}\n\nvec3 blendNormal(vec3 base, vec3 blend, float opacity) {\n\treturn (blendNormal(base, blend) * opacity + base * (1.0 - opacity));\n}\n\n// Screen\n\nfloat blendScreen(float base, float blend) {\n\treturn 1.0-((1.0-base)*(1.0-blend));\n}\n\nvec3 blendScreen(vec3 base, vec3 blend) {\n\treturn vec3(blendScreen(base.r,blend.r),blendScreen(base.g,blend.g),blendScreen(base.b,blend.b));\n}\n\nvec3 blendScreen(vec3 base, vec3 blend, float opacity) {\n\treturn (blendScreen(base, blend) * opacity + base * (1.0 - opacity));\n}\n\n// Multiply\n\nvec3 blendMultiply(vec3 base, vec3 blend) {\n\treturn base*blend;\n}\n\nvec3 blendMultiply(vec3 base, vec3 blend, float opacity) {\n\treturn (blendMultiply(base, blend) * opacity + base * (1.0 - opacity));\n}\n\n// Overlay\n\nfloat blendOverlay(float base, float blend) {\n\treturn base<0.5?(2.0*base*blend):(1.0-2.0*(1.0-base)*(1.0-blend));\n}\n\nvec3 blendOverlay(vec3 base, vec3 blend) {\n\treturn vec3(blendOverlay(base.r,blend.r),blendOverlay(base.g,blend.g),blendOverlay(base.b,blend.b));\n}\n\nvec3 blendOverlay(vec3 base, vec3 blend, float opacity) {\n\treturn (blendOverlay(base, blend) * opacity + base * (1.0 - opacity));\n}\n\n// Hard light\n\nvec3 blendHardLight(vec3 base, vec3 blend) {\n\treturn blendOverlay(blend,base);\n}\n\nvec3 blendHardLight(vec3 base, vec3 blend, float opacity) {\n\treturn (blendHardLight(base, blend) * opacity + base * (1.0 - opacity));\n}\n\n// Soft light\n\nfloat blendSoftLight(float base, float blend) {\n\treturn (blend<0.5)?(2.0*base*blend+base*base*(1.0-2.0*blend)):(sqrt(base)*(2.0*blend-1.0)+2.0*base*(1.0-blend));\n}\n\nvec3 blendSoftLight(vec3 base, vec3 blend) {\n\treturn vec3(blendSoftLight(base.r,blend.r),blendSoftLight(base.g,blend.g),blendSoftLight(base.b,blend.b));\n}\n\nvec3 blendSoftLight(vec3 base, vec3 blend, float opacity) {\n\treturn (blendSoftLight(base, blend) * opacity + base * (1.0 - opacity));\n}\n\n// Color dodge\n\nfloat blendColorDodge(float base, float blend) {\n\treturn (blend==1.0)?blend:min(base/(1.0-blend),1.0);\n}\n\nvec3 blendColorDodge(vec3 base, vec3 blend) {\n\treturn vec3(blendColorDodge(base.r,blend.r),blendColorDodge(base.g,blend.g),blendColorDodge(base.b,blend.b));\n}\n\nvec3 blendColorDodge(vec3 base, vec3 blend, float opacity) {\n\treturn (blendColorDodge(base, blend) * opacity + base * (1.0 - opacity));\n}\n\n// Color burn\n\nfloat blendColorBurn(float base, float blend) {\n\treturn (blend==0.0)?blend:max((1.0-((1.0-base)/blend)),0.0);\n}\n\nvec3 blendColorBurn(vec3 base, vec3 blend) {\n\treturn vec3(blendColorBurn(base.r,blend.r),blendColorBurn(base.g,blend.g),blendColorBurn(base.b,blend.b));\n}\n\nvec3 blendColorBurn(vec3 base, vec3 blend, float opacity) {\n\treturn (blendColorBurn(base, blend) * opacity + base * (1.0 - opacity));\n}\n\n// Vivid Light\n\nfloat blendVividLight(float base, float blend) {\n\treturn (blend<0.5)?blendColorBurn(base,(2.0*blend)):blendColorDodge(base,(2.0*(blend-0.5)));\n}\n\nvec3 blendVividLight(vec3 base, vec3 blend) {\n\treturn vec3(blendVividLight(base.r,blend.r),blendVividLight(base.g,blend.g),blendVividLight(base.b,blend.b));\n}\n\nvec3 blendVividLight(vec3 base, vec3 blend, float opacity) {\n\treturn (blendVividLight(base, blend) * opacity + base * (1.0 - opacity));\n}\n\n// Lighten\n\nfloat blendLighten(float base, float blend) {\n\treturn max(blend,base);\n}\n\nvec3 blendLighten(vec3 base, vec3 blend) {\n\treturn vec3(blendLighten(base.r,blend.r),blendLighten(base.g,blend.g),blendLighten(base.b,blend.b));\n}\n\nvec3 blendLighten(vec3 base, vec3 blend, float opacity) {\n\treturn (blendLighten(base, blend) * opacity + base * (1.0 - opacity));\n}\n\n// Linear burn\n\nfloat blendLinearBurn(float base, float blend) {\n\t// Note : Same implementation as BlendSubtractf\n\treturn max(base+blend-1.0,0.0);\n}\n\nvec3 blendLinearBurn(vec3 base, vec3 blend) {\n\t// Note : Same implementation as BlendSubtract\n\treturn max(base+blend-vec3(1.0),vec3(0.0));\n}\n\nvec3 blendLinearBurn(vec3 base, vec3 blend, float opacity) {\n\treturn (blendLinearBurn(base, blend) * opacity + base * (1.0 - opacity));\n}\n\n// Linear dodge\n\nfloat blendLinearDodge(float base, float blend) {\n\t// Note : Same implementation as BlendAddf\n\treturn min(base+blend,1.0);\n}\n\nvec3 blendLinearDodge(vec3 base, vec3 blend) {\n\t// Note : Same implementation as BlendAdd\n\treturn min(base+blend,vec3(1.0));\n}\n\nvec3 blendLinearDodge(vec3 base, vec3 blend, float opacity) {\n\treturn (blendLinearDodge(base, blend) * opacity + base * (1.0 - opacity));\n}\n\n// Linear light\n\nfloat blendLinearLight(float base, float blend) {\n\treturn blend<0.5?blendLinearBurn(base,(2.0*blend)):blendLinearDodge(base,(2.0*(blend-0.5)));\n}\n\nvec3 blendLinearLight(vec3 base, vec3 blend) {\n\treturn vec3(blendLinearLight(base.r,blend.r),blendLinearLight(base.g,blend.g),blendLinearLight(base.b,blend.b));\n}\n\nvec3 blendLinearLight(vec3 base, vec3 blend, float opacity) {\n\treturn (blendLinearLight(base, blend) * opacity + base * (1.0 - opacity));\n}",fragment:"varying vec3 v_color;\n\nvoid main() {\n  vec3 color = v_color;\n  if (u_darken_top == 1.0) {\n    vec2 st = gl_FragCoord.xy/resolution.xy;\n    color.g -= pow(st.y + sin(-12.0) * st.x, u_shadow_power) * 0.4;\n  }\n  gl_FragColor = vec4(color, 1.0);\n}"},this.conf={presetName:"",wireframe:!1,density:[.06,.16],zoom:1,rotation:0,playing:!0},document.querySelectorAll("canvas").length<1?console.log("DID NOT LOAD HERO STRIPE CANVAS"):(this.minigl=new f(this.el,null,null,!0),requestAnimationFrame((function(){n.el&&(n.computedCanvasStyle=getComputedStyle(n.el),n.waitForCssVars())})));case 1:case"end":return e.stop()}}),e,this)})).bind(this),function(){var n=this,t=arguments;return new Promise((function(i,r){var o=e.apply(n,t);function a(e){l(o,i,r,a,s,"next",e)}function s(e){l(o,i,r,a,s,"throw",e)}a(void 0)}))})()}},{key:"disconnect",value:function(){this.scrollObserver&&(window.removeEventListener("scroll",this.handleScroll),window.removeEventListener("mousedown",this.handleMouseDown),window.removeEventListener("mouseup",this.handleMouseUp),window.removeEventListener("keydown",this.handleKeyDown),this.scrollObserver.disconnect()),window.removeEventListener("resize",this.resize)}},{key:"initMaterial",value:function(){this.uniforms={u_time:new this.minigl.Uniform({value:0}),u_shadow_power:new this.minigl.Uniform({value:10}),u_darken_top:new this.minigl.Uniform({value:""===this.el.dataset.jsDarkenTop?1:0}),u_active_colors:new this.minigl.Uniform({value:this.activeColors,type:"vec4"}),u_global:new this.minigl.Uniform({value:{noiseFreq:new this.minigl.Uniform({value:[this.freqX,this.freqY],type:"vec2"}),noiseSpeed:new this.minigl.Uniform({value:5e-6})},type:"struct"}),u_vertDeform:new this.minigl.Uniform({value:{incline:new this.minigl.Uniform({value:Math.sin(this.angle)/Math.cos(this.angle)}),offsetTop:new this.minigl.Uniform({value:-.5}),offsetBottom:new this.minigl.Uniform({value:-.5}),noiseFreq:new this.minigl.Uniform({value:[3,4],type:"vec2"}),noiseAmp:new this.minigl.Uniform({value:this.amp}),noiseSpeed:new this.minigl.Uniform({value:10}),noiseFlow:new this.minigl.Uniform({value:3}),noiseSeed:new this.minigl.Uniform({value:this.seed})},type:"struct",excludeFrom:"fragment"}),u_baseColor:new this.minigl.Uniform({value:this.sectionColors[0],type:"vec3",excludeFrom:"fragment"}),u_waveLayers:new this.minigl.Uniform({value:[],excludeFrom:"fragment",type:"array"})};for(var e=1;e<this.sectionColors.length;e+=1)this.uniforms.u_waveLayers.value.push(new this.minigl.Uniform({value:{color:new this.minigl.Uniform({value:this.sectionColors[e],type:"vec3"}),noiseFreq:new this.minigl.Uniform({value:[2+e/this.sectionColors.length,3+e/this.sectionColors.length],type:"vec2"}),noiseSpeed:new this.minigl.Uniform({value:11+.3*e}),noiseFlow:new this.minigl.Uniform({value:6.5+.3*e}),noiseSeed:new this.minigl.Uniform({value:this.seed+10*e}),noiseFloor:new this.minigl.Uniform({value:.1}),noiseCeil:new this.minigl.Uniform({value:.63+.07*e})},type:"struct"}));return this.vertexShader=[this.shaderFiles.noise,this.shaderFiles.blend,this.shaderFiles.vertex].join("\n\n"),new this.minigl.Material(this.vertexShader,this.shaderFiles.fragment,this.uniforms)}},{key:"initMesh",value:function(){this.material=this.initMaterial(),this.geometry=new this.minigl.PlaneGeometry,this.mesh=new this.minigl.Mesh(this.geometry,this.material)}},{key:"shouldSkipFrame",value:function(e){return!!window.document.hidden||!this.conf.playing||parseInt(e,10)%2==0||void 0}},{key:"updateFrequency",value:function(e){this.freqX+=e,this.freqY+=e}},{key:"toggleColor",value:function(e){this.activeColors[e]=0===this.activeColors[e]?1:0}},{key:"showGradientLegend",value:function(){this.width>this.minWidth&&(this.isGradientLegendVisible=!0,document.body.classList.add("isGradientLegendVisible"))}},{key:"hideGradientLegend",value:function(){this.isGradientLegendVisible=!1,document.body.classList.remove("isGradientLegendVisible")}},{key:"init",value:function(){this.initGradientColors(),this.initMesh(),this.resize(),requestAnimationFrame(this.animate),window.addEventListener("resize",this.resize)}},{key:"waitForCssVars",value:function(){if(this.computedCanvasStyle&&-1!==this.computedCanvasStyle.getPropertyValue("--gradient-color-1").indexOf("#"))this.init(),this.addIsLoadedClass();else{var e=this;if(this.cssVarRetries+=1,this.cssVarRetries>this.maxCssVarRetries)return this.sectionColors=[16711680,16711680,16711935,65280,255],void this.init();requestAnimationFrame((function(){return e.waitForCssVars()}))}}},{key:"initGradientColors",value:function(){var e=this;this.sectionColors=["--gradient-color-1","--gradient-color-2","--gradient-color-3","--gradient-color-4","--gradient-color-5"].map((function(n){var t=e.computedCanvasStyle.getPropertyValue(n).trim();if(4===t.length){var i=t.substr(1).split("").map((function(e){return e+e})).join("");t="#".concat(i)}return t&&"0x".concat(t.substr(1))})).filter(Boolean).map(b)}}]),e}())).initGradient("#gradient-canvas")}},function(e){e.O(0,[959,774,888,179],(function(){return n=8581,e(e.s=n);var n}));var n=e.O();_N_E=n}]);